
//+------------------------------------------------------------------+
//| half                                                             |
//+------------------------------------------------------------------+

template<typename integer_t>
integer_t half(integer_t value)
{
   return value >> 1;   
}

double half(double value)
{
   return value / 2;
}

//+------------------------------------------------------------------+
//| twice                                                            |
//+------------------------------------------------------------------+

template<typename integer_t>
integer_t twice(integer_t value)
{
   return value << 1;   
}

double twice(double value)
{
   return value * 2;
}

//+------------------------------------------------------------------+
//| is_odd                                                           |
//+------------------------------------------------------------------+

template<typename integer_t>
bool is_odd(integer_t value)
{
	return bool(value & 1);
}

//+------------------------------------------------------------------+
//| is_even                                                          |
//+------------------------------------------------------------------+

template<typename integer_t>
bool is_even(integer_t value)
{
	return !is_odd(value);
}

//+------------------------------------------------------------------+
//| get_odd                                                          |
//+------------------------------------------------------------------+

uint get_odd(uint number)
{
   return (number << 1) | 1;    // 2 * number + 1;
}

//+------------------------------------------------------------------+
//| get_even                                                         |
//+------------------------------------------------------------------+

uint get_even(uint number)
{
   return number << 1;        // 2 * number;
}
